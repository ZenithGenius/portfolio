{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-particles/fesm2022/ng-particles.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, Inject, Input, Output, NgModule } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Subject, from, mergeMap, EMPTY, takeUntil } from 'rxjs';\nimport { tsParticles } from 'tsparticles-engine';\nclass NgParticlesComponent {\n  platformId;\n  options;\n  url;\n  id;\n  particlesInit;\n  particlesLoaded = new EventEmitter();\n  destroy$ = new Subject();\n  container;\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.id = 'tsparticles';\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const cb = container => {\n      this.container = container;\n      this.particlesLoaded.emit(container);\n    };\n    from(this.particlesInit ? this.particlesInit(tsParticles) : Promise.resolve()).pipe(mergeMap(() => {\n      if (this.url) {\n        return tsParticles.loadJSON(this.id, this.url);\n      } else if (this.options) {\n        return tsParticles.load(this.id, this.options);\n      } else {\n        console.error('You must specify options or url to load tsParticles');\n        return EMPTY;\n      }\n    }), takeUntil(this.destroy$)).subscribe(cb);\n  }\n  ngOnDestroy() {\n    this.container?.destroy();\n    this.destroy$.next();\n  }\n  static ɵfac = function NgParticlesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgParticlesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgParticlesComponent,\n    selectors: [[\"ng-particles\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\",\n      id: \"id\",\n      particlesInit: \"particlesInit\"\n    },\n    outputs: {\n      particlesLoaded: \"particlesLoaded\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function NgParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgParticlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-particles',\n      template: '<div [id]=\"id\"></div>'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    particlesInit: [{\n      type: Input\n    }],\n    particlesLoaded: [{\n      type: Output\n    }]\n  });\n})();\nclass ParticlesComponent extends NgParticlesComponent {\n  platformId;\n  constructor(platformId) {\n    super(platformId);\n    this.platformId = platformId;\n  }\n  static ɵfac = function ParticlesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ParticlesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParticlesComponent,\n    selectors: [[\"Particles\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function ParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ParticlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'Particles',\n      template: '<div [id]=\"id\"></div>'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\nclass NgParticlesModule {\n  static ɵfac = function NgParticlesModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgParticlesModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgParticlesModule,\n    declarations: [NgParticlesComponent, ParticlesComponent],\n    exports: [NgParticlesComponent, ParticlesComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgParticlesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgParticlesComponent, ParticlesComponent],\n      exports: [NgParticlesComponent, ParticlesComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-particles\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgParticlesComponent, NgParticlesModule, ParticlesComponent };\n"],
  "mappings": "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",
  "names": []
}
